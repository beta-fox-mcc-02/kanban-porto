{"version":3,"sources":["js/main.js"],"names":["app","Vue","el","data","message","register","name","email","password","login","currentPage","tasks","user","currentTask","newTask","title","description","dataTask","categories","computed","backlogTask","output","forEach","task","CategoryId","push","productTask","developmentTask","doneTask","methods","createUser","axios","method","url","then","catch","response","console","log","loginUser","localStorage","setItem","access_token","fetch","headers","token","getItem","err","checkToken","showFormAdd","addNewTask","showFormEdit","id","dataCategories","updateTask","deleteTask","created"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["var app = new Vue({\n    el: '#app',\n    data: {\n      message: 'Hello Vue!',\n      register : {\n        name : \"\",\n        email : \"\",\n        password : \"\",\n      },\n      login : {\n        email : \"\",\n        password : \"\"\n      },\n      currentPage: 'registerPage',\n      tasks: [],\n      user : {},\n      currentTask: {},\n      newTask : {\n          title : \"\",\n          description : \"\"\n      },\n      dataTask : {},\n      categories : []\n    },\n    computed: {\n        backlogTask () {\n            let output = []\n            this.tasks.forEach(task => {\n                if (task.CategoryId === 1) {\n                    output.push(task)\n                }\n            })\n            return output\n            // return this.doneTask.filter()\n        },\n        productTask () {\n            let output = []\n            this.tasks.forEach(task => {\n                if (task.CategoryId === 2) {\n                    output.push(task)\n                }\n            })\n            return output \n        },\n        developmentTask () {\n            let output = []\n            this.tasks.forEach(task => {\n                if (task.CategoryId === 3) {\n                    output.push(task)\n                }\n            })\n            return output \n        },\n        doneTask () {\n            let output = []\n            this.tasks.forEach(task => {\n                if (task.CategoryId === 4) {\n                    output.push(task)\n                }\n            })\n            return output \n        }\n    },\n    methods : {\n        createUser() {\n            axios({\n                method : \"POST\",\n                url : \"http://localhost:3000/register\",\n                data : {\n                    name : this.register.name,\n                    email : this.register.email,\n                    password : this.register.password\n                }\n            })\n                .then(user => {\n                    this.currentPage = 'loginPage'\n                })\n                .catch(response => {\n                    console.log(response.data)\n                })  \n        },\n        loginUser() {\n            axios({\n                method : \"POST\",\n                url : \"http://localhost:3000/login\",\n                data : {\n                    email : this.login.email,\n                    password : this.login.password\n                }\n            })\n                .then(({data}) => {\n                    localStorage.setItem('token', data.access_token)\n                    this.fetch()\n                    this.currentPage = \"mainHomePage\"\n                    \n                })\n                .catch(response => {\n                    console.log(response.data)\n                })\n        },\n        fetch() {\n            axios({\n                method : \"GET\",\n                url : \"http://localhost:3000/tasks\",\n                headers : {\n                    token: localStorage.getItem('token')\n                }\n            })\n                .then(response => {\n                    this.tasks = response.data.data\n                    this.user = response.data.user\n                    console.log(response.data)\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n\n        },\n        checkToken () {\n            if(localStorage.getItem('token')) {\n                this.currentPage = 'mainHomePage'\n                this.fetch()\n            } else {\n                this.currentPage = 'loginPage'\n            }\n        },\n        showFormAdd () {\n            this.currentPage = 'addTaskPage'\n        },\n        addNewTask() {\n            axios({\n                method : \"POST\",\n                url : \"http://localhost:3000/tasks\",\n                data : {\n                    title : this.newTask.title,\n                    description : this.newTask.description\n                },\n                headers : {\n                    token : localStorage.token\n                }\n            })\n                .then(response => { \n                    this.fetch()\n                    this.currentPage = 'mainHomePage'\n                })\n                .catch(response => {\n                    console.log(response.data)\n                })\n        },\n        showFormEdit(id) {\n            this.currentPage = 'updateTaskPage'\n            axios({\n                method : \"GET\",\n                url : `http://localhost:3000/tasks/` + id,\n                headers : {\n                    token : localStorage.token\n                }\n            })\n                .then(response => {\n                    console.log('MASUK THEN AXIOS FIND BY PK')\n                    this.dataTask = response.data.dataTask\n                    this.categories = response.data.dataCategories\n                })\n                .catch(response => {\n                    console.log(response.data)\n                })\n            \n        },\n        updateTask(id){\n            console.log('MASUK UPDATE MAIN.JS')\n            axios({\n                method : \"PUT\",\n                url : `http://localhost:3000/tasks/` + id,\n                data : {\n                    title : this.dataTask.title,\n                    description : this.dataTask.description,\n                    CategoryId: +this.dataTask.CategoryId\n                },\n                headers : {\n                    token : localStorage.token\n                }\n            })\n                .then(response => {\n                    this.currentPage = 'mainHomePage'\n                    this.fetch()\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        },\n        deleteTask(id) {\n            axios({\n                method : \"DELETE\",\n                url : `http://localhost:3000/tasks/` + id,\n                headers : {\n                    token : localStorage.token\n                }\n            })\n                .then(response => {\n                    this.currentPage = 'mainHomePage'\n                    this.fetch()\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    },\n    created() {\n        this.checkToken()\n    }\n})\n  "]}